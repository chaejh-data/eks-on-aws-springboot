# ./buildspec.yaml

version: 0.2
phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
       - java -version
       - docker -v
       - echo ${group}
       - echo ${version}
       - echo $(ls -la)

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/
  build:
    commands:
#      - ./gradlew bootjar
#      - BOOT_JAR=`ls build/libs/*.jar`
#      - echo $BOOT_JAR
      - echo Building the Layered Docker Image with Gradlew
      - ./gradlew clean bootBuildImage â€” imageName=springboot/shop
# Building image 'docker.io/library/shop:0.0.1-SNAPSHOT'
      - docker tag docker.io/library/shop:0.0.1-SNAPSHOT $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
#      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
#      - docker push $ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
#      - AWS_ECR_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - DATE='date'
      - echo Build completed on $DATE
#      - sed -i.bak 's#AWS_ECR_URI#'"$AWS_ECR_URI"'#' ./EKS/deploy.yaml
#      - sed -i.bak 's#DATE_STRING#'"$DATE"'#' ./EKS/deploy.yaml
#      - kubectl apply -f ./EKS/deploy.yaml
#      - kubectl apply -f ./EKS/svc.yaml
